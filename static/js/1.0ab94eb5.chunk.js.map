{"version":3,"sources":["todo_template.js"],"names":["Todo","onsuccess","title","parent","description","reminder","deadline","notifTimeDelta","starred","done","status","id","Error","window","database","get","evt","target","result","getMonth","Date","timeStamp","genId","strings","split","res","x","Math","floor","random","length","TodoList","name","oncreated","onerror","undefined","getByIndex","event","members","this","console","log"],"mappings":"2HAAMA,E,WASJ,aAaEC,GACC,IAAD,OAZEC,EAYF,EAZEA,MACAC,EAWF,EAXEA,OAWF,IAVEC,mBAUF,MAVgB,KAUhB,MATEC,gBASF,MATa,KASb,MAREC,gBAQF,MARa,KAQb,MAPEC,sBAOF,MAPmB,KAOnB,MANEC,eAMF,aALEC,YAKF,aAJEC,cAIF,MAJW,EAIX,MAHEC,UAGF,MAHO,KAGP,EAEA,GAFA,oBAEc,OAAVT,GAA6B,OAAXC,EACpB,MAAMS,MAAM,kCAAD,OACyBV,EAAQ,SAAW,UAIvDW,OAAOC,SAASC,IAAI,QAASZ,GAAQF,UAAY,SAAAe,GAE/C,IAAIA,EAAIC,OAAOC,OAsBb,MAAMN,MAAM,sEAAD,OAC6DT,EAD7D,qBArBX,EAAKD,MAAQA,EACb,EAAKC,OAASA,EACd,EAAKC,YAAcA,EACnB,EAAKC,SAAWA,EAChB,EAAKE,eAAiBA,EAGtB,EAAKD,SAAWA,EACZA,EAASa,SACPb,EACA,IAAIc,KAAKd,GACX,KACJ,EAAKE,QAAUA,EACf,EAAKC,KAAOA,EACZ,EAAKC,OAASA,EACd,EAAKW,UAAY,IAAID,KAErB,EAAKT,GAAKA,GAAM,EAAKW,QAEI,oBAAdrB,GAA0BA,K,oDAgB3C,IALA,IAAIsB,EAAU,mEAAmEC,MAC/E,IAGEC,EAAM,GACDC,EAAI,EAAGA,EAFH,GAEeA,IAC1BD,GAAOF,EAAQI,KAAKC,MAAMD,KAAKE,SAAWN,EAAQO,SAEpD,OAAOL,M,KAILM,E,WACJ,WAAYC,EAAMC,EAAlB,GAAkE,IAAD,WAAlCtB,UAAkC,MAA7B,KAA6B,MAAvBuB,eAAuB,WAAbC,EAAa,sBAC3DtB,OAAOC,SACTD,OAAOC,SAASsB,WAAW,QAAS,OAAQJ,GAAM/B,UAAY,SAAAoC,GAC5D,GAAIA,EAAMpB,OAAOC,OAAQ,CACvB,IAAIgB,EAKF,MAAMtB,MAAM,YAAD,OACGoB,EADH,qDAJXE,EAAQ,YAAD,OACOF,EADP,0DAST,EAAKA,KAAOA,EACZ,EAAKrB,GAAKA,GAAM,EAAKW,QACrB,EAAKgB,QAAU,GACfL,MAIJM,KAAKP,KAAOA,EACZO,KAAK5B,GAAKA,GAAM4B,KAAKjB,QACrBiB,KAAKD,QAAU,GACfE,QAAQC,IAAIT,GACZC,K,oDASF,IALA,IAAIV,EAAU,mEAAmEC,MAC/E,IAGEC,EAAM,GACDC,EAAI,EAAGA,EAFH,GAEeA,IAC1BD,GAAOF,EAAQI,KAAKC,MAAMD,KAAKE,SAAWN,EAAQO,SAEpD,OAAOL,M,KAII,WAAEzB,KAAMA,EAAM+B,SAAUA","file":"static/js/1.0ab94eb5.chunk.js","sourcesContent":["class Todo {\r\n  /**\r\n   *\r\n   * @param {object} args This argument is an object that\r\n   * determines all the arguments required to create a todo\r\n   * item in the app.\r\n   *\r\n   *\r\n   */\r\n  constructor(\r\n    {\r\n      title,\r\n      parent,\r\n      description = null,\r\n      reminder = null,\r\n      deadline = null,\r\n      notifTimeDelta = null,\r\n      starred = false,\r\n      done = false,\r\n      status = 0,\r\n      id = null,\r\n    },\r\n    onsuccess\r\n  ) {\r\n    //These props are required\r\n    if (title === null || parent === null) {\r\n      throw Error(\r\n        `Cannot create a todo without a ${title ? \"parent\" : \"title\"}`\r\n      )\r\n    } else {\r\n      // Get the database\r\n      window.database.get(\"lists\", parent).onsuccess = evt => {\r\n        //Check if the provided parent exists or not\r\n        if (evt.target.result) {\r\n          this.title = title\r\n          this.parent = parent\r\n          this.description = description\r\n          this.reminder = reminder\r\n          this.notifTimeDelta = notifTimeDelta\r\n\r\n          //Deadline should be a date object\r\n          this.deadline = deadline\r\n            ? deadline.getMonth\r\n              ? deadline\r\n              : new Date(deadline)\r\n            : null\r\n          this.starred = starred\r\n          this.done = done\r\n          this.status = status\r\n          this.timeStamp = new Date()\r\n\r\n          this.id = id || this.genId()\r\n\r\n          if (typeof onsuccess === \"function\") onsuccess()\r\n        } else {\r\n          throw Error(\r\n            `Cannot create a todo with a non-existent parent. (Provided parent \"${parent}\" was not found)`\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  genId() {\r\n    let strings = \"abcdefghijklmnpoqrstuvwxyzABCDEFGGHIJKLMNOPQRSTUVWXYZ1234567890_\".split(\r\n      \"\"\r\n    )\r\n    let length = 16\r\n    let res = \"\"\r\n    for (let x = 0; x < length; x++) {\r\n      res += strings[Math.floor(Math.random() * strings.length)]\r\n    }\r\n    return res\r\n  }\r\n}\r\n\r\nclass TodoList {\r\n  constructor(name, oncreated, { id = null, onerror = undefined }) {\r\n    if (window.database) {\r\n      window.database.getByIndex(\"lists\", \"name\", name).onsuccess = event => {\r\n        if (event.target.result) {\r\n          if (onerror) {\r\n            onerror(\r\n              `The list ${name} already exists. Please  choose a different name`\r\n            )\r\n          } else {\r\n            throw Error(\r\n              `The list ${name} already exists. Please  choose a different name`\r\n            )\r\n          }\r\n        } else {\r\n          this.name = name\r\n          this.id = id || this.genId()\r\n          this.members = []\r\n          oncreated()\r\n        }\r\n      }\r\n    } else {\r\n      this.name = name\r\n      this.id = id || this.genId()\r\n      this.members = []\r\n      console.log(name)\r\n      oncreated()\r\n    }\r\n  }\r\n  genId() {\r\n    let strings = \"abcdefghijklmnpoqrstuvwxyzABCDEFGGHIJKLMNOPQRSTUVWXYZ1234567890_\".split(\r\n      \"\"\r\n    )\r\n    let length = 16\r\n    let res = \"\"\r\n    for (let x = 0; x < length; x++) {\r\n      res += strings[Math.floor(Math.random() * strings.length)]\r\n    }\r\n    return res\r\n  }\r\n}\r\n\r\nexport default { Todo: Todo, TodoList: TodoList }\r\n"],"sourceRoot":""}