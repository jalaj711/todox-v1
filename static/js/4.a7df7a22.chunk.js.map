{"version":3,"sources":["components/TodoItem.js"],"names":["TodoItem","props","state","isOpen","toggleStar","bind","toggleState","markAsDone","handleDelete","task","markDone","done","status","window","database","update","id","unMount","then","console","log","default","onsuccess","evt","target","result","this","setState","starred","date","month","dte","Date","prefix","n","getMonth","getDate","getHours","getMinutes","delta","Math","round","deleteTask","delete","confirm","title","text","className","classes","root","expanded","expandIcon","onClick","heading","grow","reminderTiming","secondaryHeading","reminder","parseDate","deadline","details","fullWidth","variant","secHeading3","description","split","map","item","othDetails","column","parseNotifDelta","notifTimeDelta","disabled","startIcon","size","to","color","React","Component","withStyles","theme","width","marginBottom","spacing","flexGrow","minWidth","fontSize","typography","pxToRem","palette","secondary","icon","verticalAlign","height","alignItems","display","flexBasis","borderLeft","marginLeft"],"mappings":"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","file":"static/js/4.a7df7a22.chunk.js","sourcesContent":["import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  AccordionActions,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n  Divider,\n  Button,\n} from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport {\n  DeleteOutlined,\n  CheckOutlined,\n  EditOutlined,\n  ExpandMoreOutlined,\n} from \"@material-ui/icons\"\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n    }\n    this.toggleStar = this.toggleStar.bind(this)\n    this.toggleState = this.toggleState.bind(this)\n    this.markAsDone = this.markAsDone.bind(this)\n    this.handleDelete = this.handleDelete.bind(this)\n    this.task = this.props.task\n  }\n\n  markAsDone() {\n    let markDone = () => {\n      this.task.done = true\n      this.task.status = 2\n      window.database.update(\"tasks\", this.task.id, this.task, () => {\n        if (this.props.unMount) this.props.unMount()\n      })\n    }\n    if (!window.database) {\n      import(\"../database\").then(database => {\n        console.log(\"[indexedDB] Creating database instance\")\n        new database.default().onsuccess = evt => {\n          window.database = evt.target.result\n          markDone()\n        }\n      })\n    } else {\n      markDone()\n    }\n  }\n\n  toggleStar() {\n    this.setState({\n      ...this.state,\n      starred: !this.state.starred,\n    })\n  }\n\n  parseDate(date) {\n    let dte = new Date(date)\n    let prefix = n => (n < 10 ? \"0\" + n : n)\n    let month\n    switch (dte.getMonth()) {\n      case 0:\n        month = \"Jan\"\n        break\n      case 1:\n        month = \"Feb\"\n        break\n      case 2:\n        month = \"Mar\"\n        break\n      case 3:\n        month = \"Apr\"\n        break\n      case 4:\n        month = \"May\"\n        break\n      case 5:\n        month = \"Jun\"\n        break\n      case 6:\n        month = \"Jul\"\n        break\n      case 7:\n        month = \"Aug\"\n        break\n      case 8:\n        month = \"Sep\"\n        break\n      case 9:\n        month = \"Oct\"\n        break\n      case 10:\n        month = \"Nov\"\n        break\n      case 11:\n        month = \"Dec\"\n        break\n      default:\n        break\n    }\n    return `${prefix(dte.getDate())} ${month} ${prefix(\n      dte.getHours()\n    )}:${prefix(dte.getMinutes())}`\n  }\n\n  parseNotifDelta(date) {\n    let delta = date * 10\n    if (delta < 60) {\n      return `${delta} min before`\n    } else if (delta / 60 < 24) {\n      return `${Math.round(delta / 60)} hr(s) before`\n    } else {\n      return `${Math.round(delta / (60 * 24))} day(s) before`\n    }\n  }\n\n  toggleState() {\n    this.setState({\n      ...this.state,\n      isOpen: !this.state.isOpen,\n    })\n  }\n\n  handleDelete() {\n    let deleteTask = () => {\n      window.database.delete(\"tasks\", this.task.id).onsuccess = () => {\n        if (this.props.unMount) this.props.unMount()\n      }\n    }\n\n    if (window.confirm) {\n      window.confirm(\n        {\n          title: \"Delete Task?\",\n          text: `Are you sure you want to delete the task \"${this.task.title}\"? This task will NOT be marked as done or pending, it will be deleted from the database. This action is irreversible.`,\n        },\n        () => {\n          if (!window.database) {\n            import(\"../database\").then(database => {\n              console.log(\"[indexedDB] Creating database instance\")\n              new database.default().onsuccess = evt => {\n                window.database = evt.target.result\n                deleteTask()\n              }\n            })\n          } else {\n            deleteTask()\n          }\n        }\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.classes.root}>\n        <Accordion\n          expanded={this.state.isOpen}\n          className={this.task.done ? this.props.classes.done : this.task.starred ? this.props.classes.starred : \"\"}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreOutlined />}\n            onClick={this.toggleState}\n          >\n            <Typography className={this.props.classes.heading}>\n              {this.task.title}\n            </Typography>\n            <div className={this.props.classes.grow} />\n            <div className={this.props.classes.reminderTiming}>\n              <Typography className={this.props.classes.secondaryHeading}>\n                {this.task.reminder ? this.parseDate(this.task.deadline) : \"\"}\n              </Typography>\n            </div>\n          </AccordionSummary>\n          <AccordionDetails className={this.props.classes.details}>\n            <div className={this.props.classes.fullWidth}>\n              <Typography\n                variant=\"button\"\n                className={this.props.classes.secHeading3}\n              >\n                Description\n              </Typography>\n              <br />\n              <div className={this.props.classes.description}>\n                {this.task.description ? this.task.description.split('\\n').map((item) => (\n                  <div>\n                  {item}<br/>\n                  </div>\n                )) : (<i>No description provided</i>)}\n              </div>\n            </div>\n            <div className={this.props.classes.othDetails}>\n              <div className={this.props.classes.column}>\n                <Typography\n                  variant=\"button\"\n                  className={this.props.classes.secHeading3}\n                >\n                  Due At\n                </Typography>\n                <br />\n                <div className={this.props.classes.description}>\n                  {this.parseDate(this.task.deadline)}\n                </div>\n              </div>\n              <div className={this.props.classes.column}>\n                <Typography\n                  variant=\"button\"\n                  className={this.props.classes.secHeading3}\n                >\n                  Reminder\n                </Typography>\n                <br />\n                <div className={this.props.classes.description}>\n                  {this.parseNotifDelta(this.task.notifTimeDelta)}\n                </div>\n              </div>\n            </div>\n          </AccordionDetails>\n          <Divider />\n          <AccordionActions>\n            <Button\n              disabled={this.task.done}\n              startIcon={<DeleteOutlined />}\n              size=\"small\"\n              onClick={this.handleDelete}\n            >\n              Delete\n            </Button>\n\n            <Link to={this.task.done ? \"#\" : `/todox/edit/${this.task.id}`}>\n              <Button\n                disabled={this.task.done}\n                startIcon={<EditOutlined />}\n                size=\"small\"\n                color=\"secondary\"\n              >\n                Edit\n              </Button>\n            </Link>\n            <Button\n              disabled={this.task.done}\n              startIcon={<CheckOutlined />}\n              size=\"small\"\n              color=\"primary\"\n              onClick={this.markAsDone}\n            >\n              Mark as done\n            </Button>\n          </AccordionActions>\n        </Accordion>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(theme => ({\n  root: {\n    width: \"100%\",\n    marginBottom: theme.spacing(1),\n  },\n  grow: {\n    flexGrow: 1,\n    minWidth: theme.spacing(1),\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  secHeading3: {\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n    display: \"block\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  starred: {\n    borderLeft: \"3px solid yellow\",\n  },\n  done: {\n    borderLeft: \"3px solid #4caf50\",\n  },\n  reminderTiming: {\n    minWidth: \"fit-content\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  othDetails: {\n    display: \"flex\",\n  },\n  description: {\n    marginLeft: theme.spacing(1),\n  },\n}))(TodoItem)\n"],"sourceRoot":""}