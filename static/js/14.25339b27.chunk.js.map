{"version":3,"sources":["../node_modules/@material-ui/icons/esm/ChevronLeftOutlined.js","components/DesktopDrawer.js"],"names":["createSvgIcon","React","createElement","d","Item","to","this","props","link","activeClassName","classes","active","ListItem","button","Icon","ListItemIcon","ListItemText","primary","text","Component","DrawerItem","withStyles","theme","background","palette","light","borderTopRightRadius","borderBottomRightRadius","DesktopMenu","state","title","lists","dialogOpen","off","window","setTitle","setState","handleDialogOpen","bind","handleDialogClose","getLists","addList","createList","database","then","console","log","db","default","onsuccess","_evt","getMultipleByFilters","filter","val","listsLoaded","name","todo_template","list","TodoList","add","evt","onerror","msg","addError","document","getElementById","value","undefined","AppBar","position","className","appBar","appBarOn","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","drawer","drawerOn","Drawer","paper","drawerPaperOff","drawerPaper","open","toolbar","Divider","List","DayIcon","StarIcon","BillsIcon","ShoppingIcon","WorkIcon","PendingIcon","CheckIcon","CrossIcon","grow","length","map","id","key","component","notFound","style","padding","Skeleton","width","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","autoComplete","error","Boolean","helperText","DialogActions","Button","flexShrink","main","secondary","transition","transitions","create","marginLeft","mixins","left","flexGrow","display","fontSize","typography","subtitle2","spacing"],"mappings":"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","file":"static/js/14.25339b27.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12l4.58-4.59z\"\n}), 'ChevronLeftOutlined');","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  Typography,\n  AppBar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Toolbar,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  TextField,\n  Button,\n} from \"@material-ui/core\"\nimport { Skeleton } from \"@material-ui/lab\"\nimport {\n  MenuOutlined as MenuIcon,\n  StarBorderOutlined as StarIcon,\n  CheckOutlined as CheckIcon,\n  ClearOutlined as CrossIcon,\n  QueryBuilderOutlined as PendingIcon,\n  TodayOutlined as DayIcon,\n  AttachMoneyOutlined as BillsIcon,\n  ShoppingCartOutlined as ShoppingIcon,\n  WorkOutline as WorkIcon,\n  InfoOutlined as InfoIcon,\n  AddOutlined as PlusIcon,\n  ChevronLeftOutlined as ChevronLeftIcon\n} from \"@material-ui/icons\"\n\nimport { NavLink } from \"react-router-dom\"\n\nconst drawerWidth = 240\n\nclass Item extends React.Component {\n  render() {\n    return (\n      <NavLink to={this.props.link} activeClassName={this.props.classes.active}>\n        <ListItem button>\n          {this.props.Icon ? (\n            <ListItemIcon>\n              <this.props.Icon />\n            </ListItemIcon>\n          ) : (\n            \"\"\n          )}\n          <ListItemText primary={this.props.text} />\n        </ListItem>\n      </NavLink>\n    )\n  }\n}\nlet DrawerItem = withStyles(theme => ({\n  active: {\n    \"& .MuiListItem-root\": {\n      background: `${theme.palette.primary.light}`,\n      borderTopRightRadius: 20,\n      borderBottomRightRadius: 20,\n    },\n  },\n}))(Item)\n\nclass DesktopMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"todox\",\n      lists: [],\n      dialogOpen: false,\n      off: true,\n    }\n    window.setTitle = title => {\n      this.setState({ title })\n    }\n\n    this.handleDialogOpen = this.handleDialogOpen.bind(this)\n    this.handleDialogClose = this.handleDialogClose.bind(this)\n    this.getLists = this.getLists.bind(this)\n    this.addList = this.addList.bind(this)\n    this.createList = this.createList.bind(this)\n  }\n\n  componentDidMount() {\n    if (!window.database) {\n      import(\"../database\").then(database => {\n        console.log(\"[indexedDB] Creating database instance\")\n        let db = new database.default()\n        db.onsuccess = _evt => {\n          window.database = db\n          this.getLists()\n        }\n      })\n    } else {\n      this.getLists()\n    }\n  }\n\n  getLists() {\n    window.database.getMultipleByFilters(\n      \"lists\",\n      \"id\",\n      {\n        filter: \"__re\",\n        val: /^(?!.*bills|today|work|shopping).*$/,\n      },\n      lists => {\n        this.setState({\n          ...this.state,\n          listsLoaded: true,\n          lists: lists || [],\n        })\n      }\n    )\n  }\n\n  handleDialogOpen() {\n    this.setState({\n      ...this.state,\n      dialogOpen: true,\n    })\n  }\n\n  addList(name) {\n    import(\"../todo_template\").then(todo_template => {\n      let list = new todo_template.default.TodoList(\n        name,\n        () => {\n          window.database.add(\"lists\", list).onsuccess = evt => {\n            console.log(\"done\")\n            this.handleDialogClose()\n            this.getLists()\n          }\n        },\n        {\n          onerror: msg => {\n            console.log(\"error\", msg)\n            this.setState({\n              ...this.state,\n              addError:\n                \"This name is already being used. Please try sometthing else!\",\n            })\n          },\n        }\n      )\n    })\n  }\n  createList() {\n    let name = document.getElementById(\"add-list-to-db\").value\n    if (name) {\n      if (!window.database) {\n        import(\"../database\").then(database => {\n          console.log(\"[indexedDB] Creating database instance\")\n          let db = new database.default()\n          db.onsuccess = _evt => {\n            window.database = db\n            this.addList(name)\n          }\n        })\n      } else {\n        this.addList(name)\n      }\n    } else {\n      this.setState({\n        ...this.state,\n        addError: \"Please enter a name\",\n      })\n    }\n  }\n\n  handleDialogClose() {\n    this.setState({\n      ...this.setState({\n        ...this.state,\n        dialogOpen: false,\n        addError: undefined,\n      }),\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar\n          position=\"fixed\"\n          className={`${this.props.classes.appBar} ${\n            this.state.off ? \"\" : this.props.classes.appBarOn\n          }`}\n        >\n          <Toolbar>\n            {this.state.off ? (\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={() => this.setState({ ...this.state, off: false })}\n              >\n                <MenuIcon />\n              </IconButton>\n            ) : (\n              \"\"\n            )}\n            <Typography variant=\"h6\" noWrap>\n              {this.state.title}\n            </Typography>\n\n            {/* <div className={this.props.classes.grow} />\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"Show Notifications\"\n            >\n              <Badge badgeContent={6} color=\"primary\" max={9}>\n                <BellIcon />\n              </Badge>\n            </IconButton> */}\n          </Toolbar>\n        </AppBar>\n        <nav\n          className={`${this.props.classes.drawer} ${\n            this.state.off ? \"\" : this.props.classes.drawerOn\n          }`}\n        >\n          <Drawer\n            classes={{\n              paper: `${\n                this.state.off ? this.props.classes.drawerPaperOff : \"\"\n              } ${this.props.classes.drawerPaper}`,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div>\n              <div className={this.props.classes.toolbar}>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"close drawer\"\n                  onClick={() => this.setState({ ...this.state, off: true })}\n                >\n                  <ChevronLeftIcon />\n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n                <DrawerItem\n                  link=\"/todox-v1/lists/today\"\n                  text=\"My Day\"\n                  Icon={DayIcon}\n                />\n                <DrawerItem\n                  link=\"/todox-v1/starred\"\n                  text=\"Starred Tasks\"\n                  Icon={StarIcon}\n                />\n                <DrawerItem\n                  link=\"/todox-v1/lists/bills\"\n                  text=\"Bills\"\n                  Icon={BillsIcon}\n                />\n                <DrawerItem\n                  link=\"/todox-v1/lists/shopping\"\n                  text=\"Shopping List\"\n                  Icon={ShoppingIcon}\n                />\n                <DrawerItem\n                  link=\"/todox-v1/lists/work\"\n                  text=\"Work\"\n                  Icon={WorkIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <DrawerItem\n                  link=\"/todox-v1/viewby/pending\"\n                  text=\"Pending\"\n                  Icon={PendingIcon}\n                />\n                <DrawerItem\n                  link=\"/todox-v1/viewby/completed\"\n                  text=\"Done\"\n                  Icon={CheckIcon}\n                />\n                <DrawerItem\n                  link=\"/todox-v1/viewby/missing\"\n                  text=\"Missing\"\n                  Icon={CrossIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <div className={this.props.classes.button}>\n                  <Typography variant=\"button\">Your Lists</Typography>\n                  <div className={this.props.classes.grow} />\n                  <IconButton onClick={this.handleDialogOpen}>\n                    <PlusIcon />\n                  </IconButton>\n                </div>\n                {this.state.listsLoaded ? (\n                  this.state.lists.length !== 0 ? (\n                    this.state.lists.map(list => (\n                      <DrawerItem\n                        text={list.name}\n                        link={`/todox-v1/lists/${list.id}`}\n                        key={list.id}\n                      />\n                    ))\n                  ) : (\n                    <Typography\n                      variant=\"body1\"\n                      component=\"i\"\n                      className={this.props.classes.notFound}\n                    >\n                      No lists found. Click on the + icon on top right to create\n                      one\n                    </Typography>\n                  )\n                ) : (\n                  <div style={{ padding: 8 }}>\n                    <Skeleton width={200} />\n                    <Skeleton width={160} />\n                  </div>\n                )}\n              </List>\n              <Divider />\n              <List>\n                <ListItem button>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"About us\" />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </nav>\n        <Dialog\n          open={this.state.dialogOpen}\n          onClose={this.handleDialogClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add new List</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To create a new task-list enter your list title here\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"add-list-to-db\"\n              label=\"List tittle\"\n              type=\"text\"\n              fullWidth\n              autoComplete=\"off\"\n              error={Boolean(this.state.addError)}\n              helperText={this.state.addError}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.createList} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(theme => ({\n  drawer: {\n    \"& a\": {\n      color: theme.palette.text.primary,\n    },\n  },\n  drawerOn: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  appBar: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n    transition: theme.transitions.create(\"width\"),\n  },\n  appBarOn: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    left: 0,\n    transition: theme.transitions.create(\"left\"),\n  },\n  drawerPaperOff: {\n    left: -drawerWidth,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    display: \"flex\",\n    padding: 0,\n    fontSize: theme.typography.subtitle2.fontSize,\n    width: \"-webkit-fill-available\",\n    \"& .MuiTypography-root, .MuiIconButton-root\": {\n      padding: theme.spacing(1),\n    },\n  },\n  notFound: {\n    fontSize: \"smaller\",\n    padding: ` 0 ${theme.spacing(1)}px`,\n    display: \"flex\",\n  },\n}))(DesktopMenu)\n"],"sourceRoot":""}