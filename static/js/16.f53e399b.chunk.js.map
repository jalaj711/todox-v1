{"version":3,"sources":["../node_modules/@material-ui/core/esm/LinearProgress/LinearProgress.js","../node_modules/@material-ui/icons/esm/SaveOutlined.js","pages/edit.js"],"names":["LinearProgress","React","props","ref","classes","className","_props$color","color","value","valueBuffer","_props$variant","variant","other","_objectWithoutProperties","theme","useTheme","rootProps","inlineStyles","bar1","bar2","undefined","Math","round","transform","direction","concat","process","_transform","_extends","clsx","root","capitalize","determinate","indeterminate","buffer","query","role","dashed","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","style","bar2Indeterminate","bar2Buffer","withStyles","getColor","palette","type","lighten","darken","backgroundPrimary","primary","main","backgroundSecondary","secondary","position","overflow","height","colorAdjust","colorPrimary","backgroundColor","colorSecondary","marginTop","width","animation","dashedColorPrimary","backgroundImage","backgroundSize","backgroundPosition","dashedColorSecondary","left","bottom","top","transition","transformOrigin","barColorPrimary","barColorSecondary","zIndex","right","opacity","name","createSvgIcon","createElement","d","EditTask","state","lists","listname","importance","setReminder","reminder","Date","notifTimeDelta","loading","taskID","match","params","id","updateImportance","bind","updateListname","updateReminder","updateReminderTime","updateNotifDelta","validateDate","updateTodo","window","setTitle","document","title","getData","database","getMultipleByFilters","filter","val","get","onsuccess","evt","entry","target","result","setState","description","deadline","starred","parent","then","console","log","db","default","_evt","this","checked","newDate","nameError","dateError","getElementById","days","hours","minutes","date","delta","sub","isPast","dateDelta","openSnackbar","text","showActionButton","todo_template","todo","Todo","done","status","update","history","goBack","Backdrop","open","Typography","autoComplete","TextField","input","label","error","helperText","defaultValue","multiline","FormControl","formControl","InputLabel","Select","labelId","disabled","onChange","map","list","MenuItem","key","reminders","reminderControl","component","grow","Switch","Collapse","in","collapse","reminderOn","reminderOff","utils","DateFnsUtils","DateTimePicker","inputVariant","Fab","fabRight","onClick","SaveOutlined","fabIcon","fabLeft","CloseOutlined","Component","mapDispatchToProps","compose","display","maxHeight","margin","spacing","marginLeft","flexGrow","preset","innerWidth","breakpoints","values","sm","marginRight","borderRadius","border","padding","float","connect"],"mappings":"uPA0LIA,EAA8BC,cAAiB,SAAwBC,EAAOC,GAChF,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAeJ,EAAMK,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAQN,EAAMM,MACdC,EAAcP,EAAMO,YACpBC,EAAiBR,EAAMS,QACvBA,OAA6B,IAAnBD,EAA4B,gBAAkBA,EACxDE,EAAQC,YAAyBX,EAAO,CAAC,UAAW,YAAa,QAAS,QAAS,cAAe,YAElGY,EAAQC,cACRC,EAAY,GACZC,EAAe,CACjBC,KAAM,GACNC,KAAM,IAGR,GAAgB,gBAAZR,GAAyC,WAAZA,EAC/B,QAAcS,IAAVZ,EAAqB,CACvBQ,EAAU,iBAAmBK,KAAKC,MAAMd,GACxCQ,EAAU,iBAAmB,EAC7BA,EAAU,iBAAmB,IAC7B,IAAIO,EAAYf,EAAQ,IAEA,QAApBM,EAAMU,YACRD,GAAaA,GAGfN,EAAaC,KAAKK,UAAY,cAAcE,OAAOF,EAAW,WACrDG,EAKb,GAAgB,WAAZf,EACF,QAAoBS,IAAhBX,EAA2B,CAC7B,IAAIkB,GAAclB,GAAe,GAAK,IAEd,QAApBK,EAAMU,YACRG,GAAcA,GAGhBV,EAAaE,KAAKI,UAAY,cAAcE,OAAOE,EAAY,WACtDD,EAKb,OAAoBzB,gBAAoB,MAAO2B,YAAS,CACtDvB,UAAWwB,YAAKzB,EAAQ0B,KAAM1B,EAAQ,QAAQqB,OAAOM,YAAWxB,KAAUF,EAAW,CACnF,YAAeD,EAAQ4B,YACvB,cAAiB5B,EAAQ6B,cACzB,OAAU7B,EAAQ8B,OAClB,MAAS9B,EAAQ+B,OACjBxB,IACFyB,KAAM,eACLpB,EAAW,CACZb,IAAKA,GACJS,GAAoB,WAAZD,EAAoCV,gBAAoB,MAAO,CACxEI,UAAWwB,YAAKzB,EAAQiC,OAAQjC,EAAQ,cAAcqB,OAAOM,YAAWxB,QACrE,KAAmBN,gBAAoB,MAAO,CACjDI,UAAWwB,YAAKzB,EAAQkC,IAAKlC,EAAQ,WAAWqB,OAAOM,YAAWxB,MAAuB,kBAAZI,GAA2C,UAAZA,IAAwBP,EAAQmC,kBAAmB,CAC7J,YAAenC,EAAQoC,gBACvB,OAAUpC,EAAQqC,YAClB9B,IACF+B,MAAOzB,EAAaC,OACN,gBAAZP,EAA4B,KAAoBV,gBAAoB,MAAO,CAC7EI,UAAWwB,YAAKzB,EAAQkC,KAAkB,kBAAZ3B,GAA2C,UAAZA,IAAwBP,EAAQuC,kBAA+B,WAAZhC,EAAuB,CAACP,EAAQ,QAAQqB,OAAOM,YAAWxB,KAAUH,EAAQwC,YAAcxC,EAAQ,WAAWqB,OAAOM,YAAWxB,MAC/OmC,MAAOzB,EAAaE,WA2CT0B,eA/RK,SAAgB/B,GAClC,IAAIgC,EAAW,SAAkBvC,GAC/B,MAA8B,UAAvBO,EAAMiC,QAAQC,KAAmBC,YAAQ1C,EAAO,KAAQ2C,YAAO3C,EAAO,KAG3E4C,EAAoBL,EAAShC,EAAMiC,QAAQK,QAAQC,MACnDC,EAAsBR,EAAShC,EAAMiC,QAAQQ,UAAUF,MAC3D,MAAO,CAELvB,KAAM,CACJ0B,SAAU,WACVC,SAAU,SACVC,OAAQ,EACR,eAAgB,CACdC,YAAa,UAKjBC,aAAc,CACZC,gBAAiBV,GAInBW,eAAgB,CACdD,gBAAiBP,GAInBtB,YAAa,GAGbC,cAAe,GAGfC,OAAQ,CACN2B,gBAAiB,eAInB1B,MAAO,CACLZ,UAAW,kBAIbc,OAAQ,CACNmB,SAAU,WACVO,UAAW,EACXL,OAAQ,OACRM,MAAO,OACPC,UAAW,8BAIbC,mBAAoB,CAClBC,gBAAiB,mBAAmB1C,OAAO0B,EAAmB,SAAS1B,OAAO0B,EAAmB,0BACjGiB,eAAgB,YAChBC,mBAAoB,WAItBC,qBAAsB,CACpBH,gBAAiB,mBAAmB1C,OAAO6B,EAAqB,SAAS7B,OAAO6B,EAAqB,0BACrGc,eAAgB,YAChBC,mBAAoB,WAItB/B,IAAK,CACH0B,MAAO,OACPR,SAAU,WACVe,KAAM,EACNC,OAAQ,EACRC,IAAK,EACLC,WAAY,wBACZC,gBAAiB,QAInBC,gBAAiB,CACff,gBAAiB/C,EAAMiC,QAAQK,QAAQC,MAIzCwB,kBAAmB,CACjBhB,gBAAiB/C,EAAMiC,QAAQQ,UAAUF,MAI3Cd,kBAAmB,CACjByB,MAAO,OACPC,UAAW,yEAIbzB,gBAAiB,CACfkC,WAAY,cAAcjD,OAlGN,EAkGkC,aAIxDgB,WAAY,CACVqC,OAAQ,EACRJ,WAAY,cAAcjD,OAxGN,EAwGkC,aAIxDkB,kBAAmB,CACjBqB,MAAO,OACPC,UAAW,0EAIbrB,WAAY,CACV8B,WAAY,cAAcjD,OAnHN,EAmHkC,aAMxD,4BAA6B,CAE3B,KAAM,CACJ8C,KAAM,OACNQ,MAAO,QAGT,MAAO,CACLR,KAAM,OACNQ,MAAO,QAET,OAAQ,CACNR,KAAM,OACNQ,MAAO,SAGX,4BAA6B,CAE3B,KAAM,CACJR,KAAM,QACNQ,MAAO,QAGT,MAAO,CACLR,KAAM,OACNQ,MAAO,OAET,OAAQ,CACNR,KAAM,OACNQ,MAAO,QAGX,oBAAqB,CACnB,KAAM,CACJC,QAAS,EACTX,mBAAoB,WAEtB,MAAO,CACLW,QAAS,EACTX,mBAAoB,WAEtB,OAAQ,CACNW,QAAS,EACTX,mBAAoB,oBA6HM,CAChCY,KAAM,qBADOpC,CAEZ7C,G,iFC1SYkF,cAAcjF,IAAMkF,cAAc,OAAQ,CACvDC,EAAG,yKACD,gB,wFCsBEC,E,kDAUJ,WAAYnF,GAAQ,IAAD,8BACjB,cAAMA,IAVRoF,MAAQ,CACNC,MAAO,GACPC,SAAU,GACVC,WAAY,EACZC,aAAa,EACbC,SAAU,IAAIC,KACdC,eAAgB,GAChBC,SAAS,GAIT,EAAK1F,QAAUF,EAAME,QACrB,EAAK2F,OAAS7F,EAAM8F,MAAMC,OAAOC,GACjC,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAKM,WAAa,EAAKA,WAAWN,KAAhB,gBAVD,E,gEAaE,IAAD,OACdO,OAAOC,UAAUD,OAAOC,SAAS,QACrCC,SAASC,MAAQ,OACjB,IAAIC,EAAU,WACZJ,OAAOK,SAASC,qBACd,QACA,OACA,CACEC,OAAQ,OACRC,IAAK,KAEP,SAAA5B,GACEoB,OAAOK,SAASI,IAAI,QAAS,EAAKrB,QAAQsB,UAAY,SAAAC,GACpD,IAAIC,EAAQD,EAAIE,OAAOC,OACvB,EAAKC,SAAL,2BACK,EAAKpC,OADV,IAEEQ,SAAS,EACTgB,MAAOS,EAAMT,MACba,YAAaJ,EAAMI,YACnBhC,SAAU4B,EAAMK,SAChB/B,eAAgB0B,EAAM1B,eACtBJ,WAAY8B,EAAMM,QAClBnC,cAAa6B,EAAM5B,SACnBH,SAAU+B,EAAMO,OAChBvC,gBAMLoB,OAAOK,SAUVD,IATA,8BAAsBgB,MAAK,SAAAf,GACzBgB,QAAQC,IAAI,0CACZ,IAAIC,EAAK,IAAIlB,EAASmB,QACtBD,EAAGb,UAAY,SAAAe,GACbzB,OAAOK,SAAWkB,EAClBnB,U,qCAQOO,GACbe,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEE,SAAU8B,EAAIE,OAAOhH,W,uCAIR8G,GACfe,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEG,WAAY6B,EAAIE,OAAOhH,W,qCAIZ8G,GACbe,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEI,YAAa4B,EAAIE,OAAOc,a,yCAGTC,GACjBF,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEK,SAAU4C,O,uCAIGjB,GACfe,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEO,eAAgByB,EAAIE,OAAOhH,W,qCAIf,IAAD,OAMb,GALA6H,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEkD,WAAW,EACXC,WAAW,KAER5B,SAAS6B,eAAe,mBAAmBlI,MAKzC,GAAI6H,KAAK/C,MAAMI,YAAa,CACjC,IAEIiD,EAAMC,EAAOC,EAFbC,EAAO,IAAIlD,KAAKyC,KAAK/C,MAAMK,UAC3BoD,EAAQV,KAAK/C,MAAMO,eAEvBgD,EAAkB,GAARE,EAEVF,GAA4B,IAD5BD,GAASC,EAAWA,EAAU,IAAO,IAGrCD,GAAuB,IADvBD,GAAQC,EAASA,EAAQ,IAAO,IAEhCE,EAAOE,YAAIF,EAAM,CACfH,OACAC,QACAC,YAGEI,YAAOH,GACTT,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEmD,UAAW,qCAGTS,YAAUJ,EAAM,IAAIlD,MAAU,GAChCyC,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEmD,UACE,2EAGC9B,OAAOK,SAUVqB,KAAK3B,WAAWoC,EAAMC,GATtB,8BAAsBhB,MAAK,SAAAf,GACzBgB,QAAQC,IAAI,0CACZ,IAAIC,EAAK,IAAIlB,EAASmB,QACtBD,EAAGb,UAAY,SAAAe,GACbzB,OAAOK,SAAWkB,EAClB,EAAKxB,WAAWoC,EAAMC,YAS3BpC,OAAOK,SAUVqB,KAAK3B,WAAW,MAThB,8BAAsBqB,MAAK,SAAAf,GACzBgB,QAAQC,IAAI,0CACZ,IAAIC,EAAK,IAAIlB,EAASmB,QACtBD,EAAGb,UAAY,SAAAe,GACbzB,OAAOK,SAAWkB,EAClB,EAAKxB,WAAW,eArDtB2B,KAAKX,SAAL,2BACKW,KAAK/C,OADV,IAEEkD,UAAW,yC,iCA4DNM,EAAMC,GAAQ,IAAD,OACtBV,KAAKnI,MAAMiJ,aAAa,CACtBC,KAAM,mBACNC,kBAAkB,IAGpB,8BAA2BtB,MAAK,SAAAuB,GAC9B,IAAIC,EAAO,IAAID,EAAcnB,QAAQqB,KACnC,CACE1C,MAAOD,SAAS6B,eAAe,mBAAmBlI,MAClDmH,YAAad,SAAS6B,eAAe,yBAAyBlI,MAC9DsH,OAAQ,EAAKxC,MAAME,SACnBG,SAAUmD,EACVlB,SAAU,EAAKtC,MAAMI,YAAc,EAAKJ,MAAMK,SAAW,KACzDkC,QAAS,EAAKvC,MAAMG,WACpBgE,MAAM,EACNC,OAAQ,EACR7D,eAAgBkD,IAElB,WACEpC,OAAOK,SAAS2C,OACd,QACA,EAAK5D,OACLwD,GACA,SAACjC,GACKA,EAAIE,OAAOC,SACb,EAAKvH,MAAMiJ,aAAa,CACtBC,KAAK,gBACLC,kBAAkB,IAEpB,EAAKnJ,MAAM0J,QAAQC,qB,+BAU/B,OACE,yBAAKxJ,UAAWgI,KAAKnI,MAAME,QAAQ0B,MAChCuG,KAAK/C,MAAMQ,QACV,kBAACgE,EAAA,EAAD,CAAUC,MAAM,GACd,kBAACC,EAAA,EAAD,4CACA,kBAAC,EAAD,OAGF,6BACE,0BAAMC,aAAa,SACjB,kBAACC,EAAA,EAAD,CACE7J,UAAWgI,KAAKjI,QAAQ+J,MACxBxJ,QAAQ,WACRyJ,MAAM,kBACNlE,GAAG,kBACH+D,aAAa,MACbI,QAAOhC,KAAK/C,MAAMkD,UAClB8B,WAAYjC,KAAK/C,MAAMkD,WAAa,GACpC+B,aAAclC,KAAK/C,MAAMwB,QAE3B,kBAACoD,EAAA,EAAD,CACE7J,UAAWgI,KAAKjI,QAAQ+J,MACxBxJ,QAAQ,WACRsJ,aAAa,MACb/D,GAAG,wBACHkE,MAAM,gCACNG,aAAclC,KAAK/C,MAAMqC,aAAe,GACxC6C,WAAS,IAEX,kBAACC,EAAA,EAAD,CACE9J,QAAQ,WACRN,UAAWgI,KAAKjI,QAAQsK,aAExB,kBAACC,EAAA,EAAD,CAAYzE,GAAG,4BAAf,uBAGA,kBAAC0E,EAAA,EAAD,CACEC,QAAQ,2BACR3E,GAAG,oBACH1F,MAAO6H,KAAK/C,MAAMC,MAAQ8C,KAAK/C,MAAME,UAAY,EACjDsF,UAAWzC,KAAK/C,MAAMC,MACtBwF,SAAU1C,KAAKhC,eACf+D,MAAM,uBAEL/B,KAAK/C,MAAMC,MACV8C,KAAK/C,MAAMC,MAAMyF,KAAI,SAAAC,GAAI,OACvB,kBAACC,EAAA,EAAD,CAAU1K,MAAOyK,EAAK/E,GAAIiF,IAAKF,EAAK/E,IACjC+E,EAAKhG,KAAKlD,iBAIf,kBAACmJ,EAAA,EAAD,CAAU1K,OAAQ,GAAlB,gBAIN,kBAACiK,EAAA,EAAD,CACE9J,QAAQ,WACRN,UAAWgI,KAAKjI,QAAQsK,aAExB,kBAACC,EAAA,EAAD,CAAYzE,GAAG,kCAAf,cAGA,kBAAC0E,EAAA,EAAD,CACEC,QAAQ,iCACR3E,GAAG,0BACH1F,MAAO6H,KAAK/C,MAAMG,WAClBsF,SAAU1C,KAAKlC,iBACfiE,MAAM,cAEN,kBAACc,EAAA,EAAD,CAAU1K,MAAO,GAAjB,OACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,GAAjB,QAGJ,yBAAKH,UAAWgI,KAAKjI,QAAQgL,WAC3B,yBAAK/K,UAAWgI,KAAKjI,QAAQiL,iBAC3B,kBAACrB,EAAA,EAAD,CAAYsB,UAAU,QAAtB,aACA,yBAAKjL,UAAWgI,KAAKjI,QAAQmL,OAC7B,kBAACC,EAAA,EAAD,CACElD,QAASD,KAAK/C,MAAMI,YACpBqF,SAAU1C,KAAK/B,eACf/F,MAAM,aAGV,kBAACkL,EAAA,EAAD,CACEC,GAAIrD,KAAK/C,MAAMI,YACfrF,UAAS,UAAKgI,KAAKjI,QAAQuL,SAAlB,YACPtD,KAAK/C,MAAMI,YACP2C,KAAKjI,QAAQwL,WACbvD,KAAKjI,QAAQyL,cAGnB,kBAAC,IAAD,CAAyBC,MAAOC,KAC9B,kBAACC,EAAA,EAAD,CACE5B,MAAM,qBACNzJ,QAAQ,SACRsL,aAAa,WACbzL,MAAO6H,KAAK/C,MAAMK,UAAY,GAC9BoF,SAAU1C,KAAK9B,mBACf8D,QAAOhC,KAAK/C,MAAMmD,UAClB6B,WAAYjC,KAAK/C,MAAMmD,WAAa,MAGxC,kBAACgC,EAAA,EAAD,CAAa9J,QAAQ,YACnB,kBAACgK,EAAA,EAAD,CAAYzE,GAAG,mCAAf,8BAGA,kBAAC0E,EAAA,EAAD,CACEC,QAAQ,kCACR3E,GAAG,2BACH1F,MAAO6H,KAAK/C,MAAMO,gBAAkB,GACpCkF,SAAU1C,KAAK7B,iBACf4D,MAAM,8BAEN,kBAACc,EAAA,EAAD,CAAU1K,MAAO,IAAjB,gBACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,IAAjB,gBACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,IAAjB,gBACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,GAAjB,iBACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,KAAjB,iBACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,GAAjB,iBACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,GAAjB,eACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,IAAjB,eACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,IAAjB,eACA,kBAAC0K,EAAA,EAAD,CAAU1K,MAAO,KAAjB,qBAMV,kBAAC0L,EAAA,EAAD,CACE7L,UAAWgI,KAAKjI,QAAQ+L,SACxBxL,QAAQ,WACRJ,MAAM,UACN6L,QAAS/D,KAAK5B,cAEd,kBAAC4F,EAAD,CAAchM,UAAWgI,KAAKjI,QAAQkM,UANxC,QASA,kBAACJ,EAAA,EAAD,CACE7L,UAAWgI,KAAKjI,QAAQmM,QACxB5L,QAAQ,WACRyL,QAAS/D,KAAKnI,MAAM0J,QAAQC,QAE5B,kBAAC2C,EAAA,EAAD,CAAenM,UAAWgI,KAAKjI,QAAQkM,UALzC,gB,GA3VWrM,IAAMwM,WAqbvBC,EAAqB,CAAEvD,kBAKdwD,sBACb9J,aAjFa,SAAA/B,GAAK,MAAK,CACvBgB,KAAM,CACJ8K,QAAS,QACTC,UAAW,qBAEbnC,YAAa,CACXoC,OAAQhM,EAAMiM,QAAQ,GACtBC,WAAY,EACZhJ,MAAO,OAETuH,KAAM,CACJ0B,SAAU,GAEZd,SAAU,CACR3I,SAAU,QACVgB,OAAQ,GACRO,MAAO,IAETwH,QAAS,WACP,IAAIW,EAAS,CACX1J,SAAU,QACVgB,OAAQ,GACRD,KAAM,IAOR,OAJIoC,OAAOwG,WAAarM,EAAMsM,YAAYC,OAAOC,KAC/CJ,EAAO3I,KAAO,KAGT2I,GAETZ,QAAS,CACPiB,YAAazM,EAAMiM,QAAQ,IAE7B5C,MAAO,CACL2C,OAAQhM,EAAMiM,QAAQ,GACtBC,WAAY,EACZhJ,MAAO,QAEToH,UAAW,CACTpH,MAAO,OACP8I,OAAQhM,EAAMiM,QAAQ,GACtBC,WAAY,EACZQ,aAAc,EACdC,OAAQ,qCACR,wBAAyB,CACvBC,QAAS,GAEX,oBAAqB,CACnBC,MAAO,SAET,SAAU,CACRF,OAAQ,oBAGZpC,gBAAiB,CACfqC,QAAS5M,EAAMiM,QAAQ,KACvB/I,MAAO,OACP4I,QAAS,QAEXhB,WAAY,CACV8B,QAAS5M,EAAMiM,QAAQ,IAEzBlB,YAAa,CACX6B,QAAS,GAEX/B,SAAU,CACR,yBAA0B,CACxBmB,OAAQhM,EAAMiM,QAAQ,GACtBC,WAAY,EACZhJ,MAAO,+BAYX4J,YAAQ,KAAMlB,GAFDC,CAGbtH","file":"static/js/16.f53e399b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { darken, lighten } from '../styles/colorManipulator';\nimport useTheme from '../styles/useTheme';\nvar TRANSITION_DURATION = 4; // seconds\n\nexport var styles = function styles(theme) {\n  var getColor = function getColor(color) {\n    return theme.palette.type === 'light' ? lighten(color, 0.62) : darken(color, 0.5);\n  };\n\n  var backgroundPrimary = getColor(theme.palette.primary.main);\n  var backgroundSecondary = getColor(theme.palette.secondary.main);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      overflow: 'hidden',\n      height: 4,\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root and bar2 element if `color=\"primary\"`; bar2 if `variant=\"buffer\"`. */\n    colorPrimary: {\n      backgroundColor: backgroundPrimary\n    },\n\n    /* Styles applied to the root and bar2 elements if `color=\"secondary\"`; bar2 if `variant=\"buffer\"`. */\n    colorSecondary: {\n      backgroundColor: backgroundSecondary\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {},\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `variant=\"buffer\"`. */\n    buffer: {\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `variant=\"query\"`. */\n    query: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"`. */\n    dashed: {\n      position: 'absolute',\n      marginTop: 0,\n      height: '100%',\n      width: '100%',\n      animation: '$buffer 3s infinite linear'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"primary\"`. */\n    dashedColorPrimary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundPrimary, \" 0%, \").concat(backgroundPrimary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the additional bar element if `variant=\"buffer\"` and `color=\"secondary\"`. */\n    dashedColorSecondary: {\n      backgroundImage: \"radial-gradient(\".concat(backgroundSecondary, \" 0%, \").concat(backgroundSecondary, \" 16%, transparent 42%)\"),\n      backgroundSize: '10px 10px',\n      backgroundPosition: '0 -23px'\n    },\n\n    /* Styles applied to the layered bar1 and bar2 elements. */\n    bar: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      top: 0,\n      transition: 'transform 0.2s linear',\n      transformOrigin: 'left'\n    },\n\n    /* Styles applied to the bar elements if `color=\"primary\"`; bar2 if `variant` not \"buffer\". */\n    barColorPrimary: {\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the bar elements if `color=\"secondary\"`; bar2 if `variant` not \"buffer\". */\n    barColorSecondary: {\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"indeterminate or query\"`. */\n    bar1Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite'\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"determinate\"`. */\n    bar1Determinate: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar1 element if `variant=\"buffer\"`. */\n    bar1Buffer: {\n      zIndex: 1,\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"indeterminate or query\"`. */\n    bar2Indeterminate: {\n      width: 'auto',\n      animation: '$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite'\n    },\n\n    /* Styles applied to the bar2 element if `variant=\"buffer\"`. */\n    bar2Buffer: {\n      transition: \"transform .\".concat(TRANSITION_DURATION, \"s linear\")\n    },\n    // Legends:\n    // || represents the viewport\n    // -  represents a light background\n    // x  represents a dark background\n    '@keyframes indeterminate1': {\n      //  |-----|---x-||-----||-----|\n      '0%': {\n        left: '-35%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||xxxx-|\n      '60%': {\n        left: '100%',\n        right: '-90%'\n      },\n      '100%': {\n        left: '100%',\n        right: '-90%'\n      }\n    },\n    '@keyframes indeterminate2': {\n      //  |xxxxx|xxxxx||-----||-----|\n      '0%': {\n        left: '-200%',\n        right: '100%'\n      },\n      //  |-----|-----||-----||-x----|\n      '60%': {\n        left: '107%',\n        right: '-8%'\n      },\n      '100%': {\n        left: '107%',\n        right: '-8%'\n      }\n    },\n    '@keyframes buffer': {\n      '0%': {\n        opacity: 1,\n        backgroundPosition: '0 -23px'\n      },\n      '50%': {\n        opacity: 0,\n        backgroundPosition: '0 -23px'\n      },\n      '100%': {\n        opacity: 1,\n        backgroundPosition: '-200px -23px'\n      }\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      value = props.value,\n      valueBuffer = props.valueBuffer,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"]);\n\n  var theme = useTheme();\n  var rootProps = {};\n  var inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      var transform = value - 100;\n\n      if (theme.direction === 'rtl') {\n        transform = -transform;\n      }\n\n      inlineStyles.bar1.transform = \"translateX(\".concat(transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      var _transform = (valueBuffer || 0) - 100;\n\n      if (theme.direction === 'rtl') {\n        _transform = -_transform;\n      }\n\n      inlineStyles.bar2.transform = \"translateX(\".concat(_transform, \"%)\");\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('Material-UI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(color))], className, {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'buffer': classes.buffer,\n      'query': classes.query\n    }[variant]),\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other), variant === 'buffer' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.dashed, classes[\"dashedColor\".concat(capitalize(color))])\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, classes[\"barColor\".concat(capitalize(color))], (variant === 'indeterminate' || variant === 'query') && classes.bar1Indeterminate, {\n      'determinate': classes.bar1Determinate,\n      'buffer': classes.bar1Buffer\n    }[variant]),\n    style: inlineStyles.bar1\n  }), variant === 'determinate' ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.bar, (variant === 'indeterminate' || variant === 'query') && classes.bar2Indeterminate, variant === 'buffer' ? [classes[\"color\".concat(capitalize(color))], classes.bar2Buffer] : classes[\"barColor\".concat(capitalize(color))]),\n    style: inlineStyles.bar2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLinearProgress'\n})(LinearProgress);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\"\n}), 'SaveOutlined');","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  Collapse,\n  Typography,\n  Switch,\n  Fab,\n  TextField,\n  FormControl,\n  Select,\n  InputLabel,\n  MenuItem,\n  Backdrop,\n  LinearProgress,\n} from \"@material-ui/core\"\nimport { SaveOutlined, CloseOutlined } from \"@material-ui/icons\"\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport sub from \"date-fns/sub\"\nimport isPast from \"date-fns/isPast\"\nimport dateDelta from \"date-fns/differenceInDays\"\nimport { openSnackbar } from '../redux/snackbarSlice'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\n//import { Link } from \"react-router-dom\"\n\nclass EditTask extends React.Component {\n  state = {\n    lists: [],\n    listname: \"\",\n    importance: 0,\n    setReminder: false,\n    reminder: new Date(),\n    notifTimeDelta: 0.5,\n    loading: true,\n  }\n  constructor(props) {\n    super(props)\n    this.classes = props.classes\n    this.taskID = props.match.params.id\n    this.updateImportance = this.updateImportance.bind(this)\n    this.updateListname = this.updateListname.bind(this)\n    this.updateReminder = this.updateReminder.bind(this)\n    this.updateReminderTime = this.updateReminderTime.bind(this)\n    this.updateNotifDelta = this.updateNotifDelta.bind(this)\n    this.validateDate = this.validateDate.bind(this)\n    this.updateTodo = this.updateTodo.bind(this)\n  }\n\n  componentDidMount() {\n    if (window.setTitle) window.setTitle(\"Edit\")\n    document.title = \"Edit\"\n    let getData = () => {\n      window.database.getMultipleByFilters(\n        \"lists\",\n        \"name\",\n        {\n          filter: \"__ne\",\n          val: \"\",\n        },\n        lists => {\n          window.database.get(\"tasks\", this.taskID).onsuccess = evt => {\n            let entry = evt.target.result\n            this.setState({\n              ...this.state,\n              loading: false,\n              title: entry.title,\n              description: entry.description,\n              reminder: entry.deadline,\n              notifTimeDelta: entry.notifTimeDelta,\n              importance: entry.starred,\n              setReminder: entry.reminder ? true : false,\n              listname: entry.parent,\n              lists,\n            })\n          }\n        }\n      )\n    }\n    if (!window.database) {\n      import(\"../database\").then(database => {\n        console.log(\"[indexedDB] Creating database instance\")\n        let db = new database.default()\n        db.onsuccess = _evt => {\n          window.database = db\n          getData()\n        }\n      })\n    } else {\n      getData()\n    }\n  }\n\n  updateListname(evt) {\n    this.setState({\n      ...this.state,\n      listname: evt.target.value,\n    })\n  }\n\n  updateImportance(evt) {\n    this.setState({\n      ...this.state,\n      importance: evt.target.value,\n    })\n  }\n\n  updateReminder(evt) {\n    this.setState({\n      ...this.state,\n      setReminder: evt.target.checked,\n    })\n  }\n  updateReminderTime(newDate) {\n    this.setState({\n      ...this.state,\n      reminder: newDate,\n    })\n  }\n\n  updateNotifDelta(evt) {\n    this.setState({\n      ...this.state,\n      notifTimeDelta: evt.target.value,\n    })\n  }\n\n  validateDate() {\n    this.setState({\n      ...this.state,\n      nameError: false,\n      dateError: false,\n    })\n    if (!document.getElementById(\"task-edit-title\").value) {\n      this.setState({\n        ...this.state,\n        nameError: \"Please enter a title for the task\",\n      })\n    } else if (this.state.setReminder) {\n      let date = new Date(this.state.reminder)\n      let delta = this.state.notifTimeDelta\n      let days, hours, minutes\n      minutes = delta * 10\n      hours = (minutes - (minutes % 60)) / 60\n      minutes = minutes - hours * 60\n      days = (hours - (hours % 24)) / 24\n      hours = hours - days * 24\n      date = sub(date, {\n        days,\n        hours,\n        minutes,\n      })\n\n      if (isPast(date)) {\n        this.setState({\n          ...this.state,\n          dateError: \"You can not choose a past date!\",\n        })\n      } else {\n        if (dateDelta(date, new Date()) > 25) {\n          this.setState({\n            ...this.state,\n            dateError:\n              \"Cannot set reminder for a task that is due more than 25 days from now\",\n          })\n        } else {\n          if (!window.database) {\n            import(\"../database\").then(database => {\n              console.log(\"[indexedDB] Creating database instance\")\n              let db = new database.default()\n              db.onsuccess = _evt => {\n                window.database = db\n                this.updateTodo(date, delta)\n              }\n            })\n          } else {\n            this.updateTodo(date, delta)\n          }\n        }\n      }\n    } else {\n      if (!window.database) {\n        import(\"../database\").then(database => {\n          console.log(\"[indexedDB] Creating database instance\")\n          let db = new database.default()\n          db.onsuccess = _evt => {\n            window.database = db\n            this.updateTodo(null)\n          }\n        })\n      } else {\n        this.updateTodo(null)\n      }\n    }\n  }\n\n  updateTodo(date, delta) {\n    this.props.openSnackbar({\n      text: \"Updating todo...\",\n      showActionButton: false,\n    })\n\n    import(\"../todo_template\").then(todo_template => {\n      let todo = new todo_template.default.Todo(\n        {\n          title: document.getElementById(\"task-edit-title\").value,\n          description: document.getElementById(\"task-edit-description\").value,\n          parent: this.state.listname,\n          reminder: date,\n          deadline: this.state.setReminder ? this.state.reminder : null,\n          starred: this.state.importance,\n          done: false,\n          status: 0,\n          notifTimeDelta: delta,\n        },\n        () => {\n          window.database.update(\n            \"tasks\",\n            this.taskID,\n            todo,\n            (evt) => {\n              if (evt.target.result) {\n                this.props.openSnackbar({\n                  text: `Updated todo.`,\n                  showActionButton: false,\n                })\n                this.props.history.goBack()\n              }\n            }\n          )\n        }\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={this.props.classes.root}>\n        {this.state.loading ? (\n          <Backdrop open={true}>\n            <Typography>Loading the details of your todo...</Typography>\n            <LinearProgress />\n          </Backdrop>\n        ) : (\n          <div>\n            <form autoComplete=\"false\">\n              <TextField\n                className={this.classes.input}\n                variant=\"outlined\"\n                label=\"Enter task name\"\n                id=\"task-edit-title\"\n                autoComplete=\"off\"\n                error={this.state.nameError ? true : false}\n                helperText={this.state.nameError || \"\"}\n                defaultValue={this.state.title}\n              />\n              <TextField\n                className={this.classes.input}\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                id=\"task-edit-description\"\n                label=\"Enter task details (Optional)\"\n                defaultValue={this.state.description || \"\"}\n                multiline\n              />\n              <FormControl\n                variant=\"outlined\"\n                className={this.classes.formControl}\n              >\n                <InputLabel id=\"list-edit-choosing-label\">\n                  Choose where to add\n                </InputLabel>\n                <Select\n                  labelId=\"list-edit-choosing-label\"\n                  id=\"list-edit-chooser\"\n                  value={this.state.lists ? this.state.listname : -1}\n                  disabled={!this.state.lists}\n                  onChange={this.updateListname}\n                  label=\"Choose where to add\"\n                >\n                  {this.state.lists ? (\n                    this.state.lists.map(list => (\n                      <MenuItem value={list.id} key={list.id}>\n                        {list.name.capitalize()}\n                      </MenuItem>\n                    ))\n                  ) : (\n                    <MenuItem value={-1}>Loading...</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n              <FormControl\n                variant=\"outlined\"\n                className={this.classes.formControl}\n              >\n                <InputLabel id=\"importance-edit-choosing-label\">\n                  Important?\n                </InputLabel>\n                <Select\n                  labelId=\"importance-edit-choosing-label\"\n                  id=\"importance-edit-chooser\"\n                  value={this.state.importance}\n                  onChange={this.updateImportance}\n                  label=\"Important?\"\n                >\n                  <MenuItem value={1}>Yes</MenuItem>\n                  <MenuItem value={0}>No</MenuItem>\n                </Select>\n              </FormControl>\n              <div className={this.classes.reminders}>\n                <div className={this.classes.reminderControl}>\n                  <Typography component=\"span\">Reminders</Typography>\n                  <div className={this.classes.grow} />\n                  <Switch\n                    checked={this.state.setReminder}\n                    onChange={this.updateReminder}\n                    color=\"primary\"\n                  />\n                </div>\n                <Collapse\n                  in={this.state.setReminder}\n                  className={`${this.classes.collapse} ${\n                    this.state.setReminder\n                      ? this.classes.reminderOn\n                      : this.classes.reminderOff\n                  }`}\n                >\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <DateTimePicker\n                      label=\"Pick a date & time\"\n                      variant=\"dialog\"\n                      inputVariant=\"outlined\"\n                      value={this.state.reminder || \"\"}\n                      onChange={this.updateReminderTime}\n                      error={this.state.dateError ? true : false}\n                      helperText={this.state.dateError || \"\"}\n                    />\n                  </MuiPickersUtilsProvider>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel id=\"notif-delta-edit-choosing-label\">\n                      When should we remind you?\n                    </InputLabel>\n                    <Select\n                      labelId=\"notif-delta-edit-choosing-label\"\n                      id=\"notif-delta-edit-chooser\"\n                      value={this.state.notifTimeDelta || \"\"}\n                      onChange={this.updateNotifDelta}\n                      label=\"When should we remind you?\"\n                    >\n                      <MenuItem value={0.1}>1 min before</MenuItem>\n                      <MenuItem value={0.2}>2 min before</MenuItem>\n                      <MenuItem value={0.5}>5 min before</MenuItem>\n                      <MenuItem value={1.0}>10 min before</MenuItem>\n                      <MenuItem value={1.5}>15 min before</MenuItem>\n                      <MenuItem value={3}>30 min before</MenuItem>\n                      <MenuItem value={6}>1 hr before</MenuItem>\n                      <MenuItem value={12}>2 hr before</MenuItem>\n                      <MenuItem value={36}>6 hr before</MenuItem>\n                      <MenuItem value={144}>1 day before</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Collapse>\n              </div>\n            </form>\n            <Fab\n              className={this.classes.fabRight}\n              variant=\"extended\"\n              color=\"primary\"\n              onClick={this.validateDate}\n            >\n              <SaveOutlined className={this.classes.fabIcon} />\n              Save\n            </Fab>\n            <Fab\n              className={this.classes.fabLeft}\n              variant=\"extended\"\n              onClick={this.props.history.goBack}\n            >\n              <CloseOutlined className={this.classes.fabIcon} />\n              Cancel\n            </Fab>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    display: \"block\",\n    maxHeight: \"calc(85vh - 70px)\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    marginLeft: 0,\n    width: \"45%\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabRight: {\n    position: \"fixed\",\n    bottom: 25,\n    right: 25,\n  },\n  fabLeft: () => {\n    let preset = {\n      position: \"fixed\",\n      bottom: 25,\n      left: 25,\n    }\n\n    if (window.innerWidth > theme.breakpoints.values.sm) {\n      preset.left = 265\n    }\n\n    return preset\n  },\n  fabIcon: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    margin: theme.spacing(1),\n    marginLeft: 0,\n    width: \"100%\",\n  },\n  reminders: {\n    width: \"100%\",\n    margin: theme.spacing(1),\n    marginLeft: 0,\n    borderRadius: 4,\n    border: \"1px solid rgba(150, 150, 150, 0.4)\",\n    \"& .MuiTypography-root\": {\n      padding: 8,\n    },\n    \"& .MuiSwitch-root\": {\n      float: \"right\",\n    },\n    \":hover\": {\n      border: \"1px solid white\",\n    },\n  },\n  reminderControl: {\n    padding: theme.spacing(1.5),\n    width: \"100%\",\n    display: \"flex\",\n  },\n  reminderOn: {\n    padding: theme.spacing(2),\n  },\n  reminderOff: {\n    padding: 0,\n  },\n  collapse: {\n    \"& .MuiFormControl-root\": {\n      margin: theme.spacing(1),\n      marginLeft: 0,\n      width: \"-webkit-fill-available\",\n    },\n  },\n})\n\nconst mapDispatchToProps = { openSnackbar }\n\n/**\n * Append the redux actions, get the list styled and export it.\n */\nexport default compose(\n  withStyles(styles),\n  connect(null, mapDispatchToProps)\n)(EditTask)\n"],"sourceRoot":""}