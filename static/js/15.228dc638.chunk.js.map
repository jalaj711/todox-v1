{"version":3,"sources":["components/MobileDrawer.js"],"names":["Item","to","this","props","link","activeClassName","classes","active","root","className","onClick","handleDrawer","button","Icon","primary","text","React","Component","DrawerItem","withStyles","theme","background","palette","light","borderTopRightRadius","borderBottomRightRadius","textDecoration","color","MobileMenu","state","title","lists","dialogOpen","window","setTitle","setState","handleDrawerToggle","bind","handleDialogOpen","handleDialogClose","getLists","addList","createList","database","then","console","log","db","default","onsuccess","_evt","getMultipleByFilters","filter","val","listsLoaded","name","todo_template","list","TodoList","add","evt","onerror","msg","addError","document","getElementById","value","undefined","mobileOpen","position","appBar","aria-label","edge","variant","noWrap","grow","badgeContent","max","anchor","open","onClose","paper","drawerPaper","ModalProps","keepMounted","toolbar","a","DayIcon","StarIcon","BillsIcon","ShoppingIcon","WorkIcon","PendingIcon","CheckIcon","CrossIcon","length","map","id","key","component","notFound","style","padding","width","aria-labelledby","autoFocus","margin","label","type","autoComplete","fullWidth","error","Boolean","helperText","main","secondary","mixins","flexGrow","display","fontSize","typography","subtitle2","spacing"],"mappings":"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","file":"static/js/15.228dc638.chunk.js","sourcesContent":["import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n  Typography,\n  AppBar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Toolbar,\n  IconButton,\n  Badge,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  TextField,\n  Button,\n} from \"@material-ui/core\"\nimport { Skeleton } from \"@material-ui/lab\"\nimport {\n  NotificationsNoneOutlined as BellIcon,\n  StarBorderOutlined as StarIcon,\n  CheckOutlined as CheckIcon,\n  ClearOutlined as CrossIcon,\n  QueryBuilderOutlined as PendingIcon,\n  TodayOutlined as DayIcon,\n  AttachMoneyOutlined as BillsIcon,\n  ShoppingCartOutlined as ShoppingIcon,\n  WorkOutline as WorkIcon,\n  InfoOutlined as InfoIcon,\n  AddOutlined as PlusIcon,\n  MenuOutlined as MenuIcon,\n} from \"@material-ui/icons\"\n\nimport { NavLink } from \"react-router-dom\"\n\nconst drawerWidth = 240\n\nclass Item extends React.Component {\n  render() {\n    return (\n      <NavLink\n        to={this.props.link}\n        activeClassName={`${this.props.classes.active} ${this.props.classes.root}`}\n        className={this.props.classes.root}\n        onClick={this.props.handleDrawer}\n      >\n        <ListItem button>\n          {this.props.Icon ? (\n            <ListItemIcon>\n              <this.props.Icon />\n            </ListItemIcon>\n          ) : (\n            \"\"\n          )}\n          <ListItemText primary={this.props.text} />\n        </ListItem>\n      </NavLink>\n    )\n  }\n}\nlet DrawerItem = withStyles(theme => ({\n  active: {\n    \"& .MuiListItem-root\": {\n      background: `${theme.palette.primary.light}`,\n      borderTopRightRadius: 20,\n      borderBottomRightRadius: 20,\n    },\n  },\n  root: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  },\n}))(Item)\n\nclass MobileMenu extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"todox\",\n      lists: [],\n      dialogOpen: false,\n    }\n\n    window.setTitle = title => {\n      this.setState({ title })\n    }\n\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this)\n    this.handleDialogOpen = this.handleDialogOpen.bind(this)\n    this.handleDialogClose = this.handleDialogClose.bind(this)\n    this.getLists = this.getLists.bind(this)\n    this.addList = this.addList.bind(this)\n    this.createList = this.createList.bind(this)\n  }\n\n  componentDidMount() {\n    if (!window.database) {\n      import(\"../database\").then(database => {\n        console.log(\"[indexedDB] Creating database instance\")\n        let db = new database.default()\n        db.onsuccess = _evt => {\n          window.database = db\n          this.getLists()\n        }\n      })\n    } else {\n      this.getLists()\n    }\n  }\n\n  getLists() {\n    window.database.getMultipleByFilters(\n      \"lists\",\n      \"id\",\n      {\n        filter: \"__re\",\n        val: /^(?!.*bills|today|work|shopping).*$/,\n      },\n      lists => {\n        this.setState({\n          ...this.state,\n          listsLoaded: true,\n          lists: lists || [],\n        })\n      }\n    )\n  }\n\n  handleDialogOpen() {\n    this.setState({\n      ...this.state,\n      dialogOpen: true,\n    })\n  }\n\n  addList(name) {\n    import(\"../todo_template\").then(todo_template => {\n      let list = new todo_template.default.TodoList(\n        name,\n        () => {\n          window.database.add(\"lists\", list).onsuccess = evt => {\n            console.log(\"done\")\n            this.handleDialogClose()\n            this.getLists()\n          }\n        },\n        {\n          onerror: msg => {\n            console.log(\"error\", msg)\n            this.setState({\n              ...this.state,\n              addError:\n                \"This name is already being used. Please try sometthing else!\",\n            })\n          },\n        }\n      )\n    })\n  }\n  createList() {\n    let name = document.getElementById(\"add-list-to-db\").value\n    if (name) {\n      if (!window.database) {\n        import(\"../database\").then(database => {\n          console.log(\"[indexedDB] Creating database instance\")\n          let db = new database.default()\n          db.onsuccess = _evt => {\n            window.database = db\n            this.addList(name)\n          }\n        })\n      } else {\n        this.addList(name)\n      }\n    } else {\n      this.setState({\n        ...this.state,\n        addError: \"Please enter a name\",\n      })\n    }\n  }\n\n  handleDialogClose() {\n    this.setState({\n      ...this.setState({\n        ...this.state,\n        dialogOpen: false,\n        addError: undefined\n      }),\n    })\n  }\n\n\n  handleDrawerToggle() {\n    this.setState({\n      ...this.state,\n      mobileOpen: !this.state.mobileOpen,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar position=\"fixed\" className={this.props.classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={this.handleDrawerToggle}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              {this.state.title}\n            </Typography>\n            <div className={this.props.classes.grow} />\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"Show Notifications\"\n            >\n              <Badge badgeContent={6} color=\"primary\" max={9}>\n                <BellIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <nav>\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={this.state.mobileOpen}\n            onClose={this.handleDrawerToggle}\n            classes={{\n              paper: this.props.classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            <div>\n              <div className={this.props.classes.toolbar} />\n              <Divider />\n              <List>\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/lists/today\"\n                  text=\"My Day\"\n                  Icon={DayIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/starred\"\n                  text=\"Starred Tasks\"\n                  Icon={StarIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/lists/bills\"\n                  text=\"Bills\"\n                  Icon={BillsIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/lists/shopping\"\n                  text=\"Shopping List\"\n                  Icon={ShoppingIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/lists/work\"\n                  text=\"Work\"\n                  Icon={WorkIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/viewby/pending\"\n                  text=\"Pending\"\n                  Icon={PendingIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/viewby/completed\"\n                  text=\"Done\"\n                  Icon={CheckIcon}\n                />\n                <DrawerItem\n                className={this.props.classes.a}\n                  handleDrawer={this.handleDrawerToggle}\n                  link=\"/todox-v1/viewby/missing\"\n                  text=\"Missing\"\n                  Icon={CrossIcon}\n                />\n              </List>\n              <Divider />\n              <List>\n                <div className={this.props.classes.button}>\n                  <Typography variant=\"button\">Your Lists</Typography>\n                  <div className={this.props.classes.grow} />\n                  <IconButton onClick={this.handleDialogOpen}>\n                    <PlusIcon />\n                  </IconButton>\n                </div>\n                {this.state.listsLoaded ? (\n                  this.state.lists.length !== 0 ? (\n                    this.state.lists.map(list => (\n                      <DrawerItem\n                      className={this.props.classes.a}\n                        handleDrawer={this.handleDrawerToggle}\n                        text={list.name}\n                        link={`/todox-v1/lists/${list.id}`}\n                        key={list.id}\n                      />\n                    ))\n                  ) : (\n                    <Typography\n                      variant=\"body1\"\n                      component=\"i\"\n                      className={this.props.classes.notFound}\n                    >\n                      No lists found. Click on the + icon on top right to create\n                      one\n                    </Typography>\n                  )\n                ) : (\n                  <div style={{ padding: 8 }}>\n                    <Skeleton width={200} />\n                    <Skeleton width={160} />\n                  </div>\n                )}\n              </List>\n              <Divider />\n              <List>\n                <ListItem button>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"About us\" />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n        </nav>\n        <Dialog\n          open={this.state.dialogOpen}\n          onClose={this.handleDialogClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add new List</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To create a new task-list enter your list title here\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"add-list-to-db\"\n              label=\"List tittle\"\n              type=\"text\"\n              autoComplete=\"off\"\n              fullWidth\n              error={Boolean(this.state.addError)}\n              helperText={this.state.addError}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.createList} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(theme => ({\n  appBar: {\n    background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    display: \"flex\",\n    padding: 0,\n    fontSize: theme.typography.subtitle2.fontSize,\n    width: \"-webkit-fill-available\",\n    \"& .MuiTypography-root, .MuiIconButton-root\": {\n      padding: theme.spacing(1),\n    },\n  },\n  notFound: {\n    fontSize: \"smaller\",\n    padding: ` 0 ${theme.spacing(1)}px`,\n    display: \"flex\",\n  },\n}))(MobileMenu)\n"],"sourceRoot":""}